# Network Observability Setup Guide

This document outlines the steps for setting up and using **Network Observability** on OpenShift, including the installation of the Network Observability Operator, Loki Operator, and the configuration of a **Flow Collector**. It also provides instructions on viewing network traffic data through the OpenShift console.

---

## Network Observability Operator

The **Network Observability Operator** provides the **Flow Collector** API custom resource definition (CRD). A **Flow Collector** instance is a cluster-scoped resource that configures the collection of network flows in your OpenShift cluster. It deploys pods and services that form a monitoring pipeline to collect network flows and enrich them with Kubernetes metadata before storing them in Loki or generating Prometheus metrics.

### Key Components

- **Flow Collector**: Collects and processes network flow data.
- **eBPF Agent**: Deployed as a DaemonSet, it generates network flow data.
- **Loki**: Used for storing network logs and metrics.

---

## Installing the Loki Operator

### Prerequisites
- Supported Log Stores: AWS S3, Google Cloud Storage, Azure, Swift, Minio, OpenShift Data Foundation.
- **OpenShift Container Platform 4.10+**.
- **Linux Kernel 4.18+**.

### Procedure

1. In the OpenShift Container Platform web console, navigate to **Operators → OperatorHub**.
2. Search for the **Loki Operator** in the list and click **Install**.
3. Select **All namespaces on the cluster** under Installation Mode.
4. Click **Install** to proceed.

### Verification

After installation:
1. Navigate to **Operators → Installed Operators** and verify that the **Loki Operator** is listed with a **Succeeded** status.

---

## Create and Deploy LokiStack

To configure Loki with Azure Blob Storage, follow these steps:

### 1. Create an Azure Blob Storage Account
- Save the following credentials:
  - **Container Name**
  - **Account Name**
  - **Account Key**

### 2. Create a Secret for Loki in OpenShift

Create a secret with the Azure Blob storage credentials:

```bash
$ oc create secret generic netobserv-loki-azure-blob \
  --from-literal=container="<azure_container_name>" \
  --from-literal=environment="<azure_environment>" \
  --from-literal=account_name="<azure_account_name>" \
  --from-literal=account_key="<azure_account_key>"
```

Alternatively, you can use a YAML definition to create the secret:

```yaml
apiVersion: v1
kind: Secret
metadata:
  name: netobserv-loki-azure-blob
type: Opaque
data:
  container: <base64_encoded_azure_container_name>
  environment: <base64_encoded_azure_environment>
  account_name: <base64_encoded_azure_account_name>
  account_key: <base64_encoded_azure_account_key>
```

### 3. Create a LokiStack Instance

Define the LokiStack instance in a YAML file as follows:

```yaml
apiVersion: loki.grafana.com/v1
kind: LokiStack
metadata:
  name: loki
  namespace: netobserv
spec:
  size: 1x.demo
  storage:
    schemas:
    - version: v12
      effectiveDate: '2022-06-01'
    secret:
      name: netobserv-loki-azure-blob
      type: azure
  storageClassName: managed-csi
  tenants:
    mode: openshift-network
```

Apply the YAML definition using:

```bash
$ oc apply -f <filename>.yaml
```

Refer to the [Loki Deployment Sizing Reference](https://docs.openshift.com/container-platform/4.16/observability/network_observability/installing-operators.html#loki-deployment-sizing_network_observability) for more information.

---

## Installing the Network Observability Operator

The **Network Observability Operator** installs the **FlowCollector** CRD, which can be used to configure the collection of network flow data.

### Prerequisites
- **Loki Operator 5.7+** must be installed if using Loki for log storage.
- Cluster-admin privileges are required.
- Supported architectures: amd64, ppc64le, arm64, or s390x.
- OpenShift SDN or OVN-Kubernetes as the main network plugin (with optional secondary interfaces like Multus or SR-IOV).
- Optional: Create the components in a custom namespace (e.g., **netobserv**).

### Procedure

1. In the OpenShift Container Platform web console, navigate to **Operators → OperatorHub**.
2. Search for the **Network Observability Operator** and click **Install**.
3. Select **Enable Operator recommended cluster monitoring on this Namespace**.
4. Navigate to **Operators → Installed Operators**, and under **Provided APIs** for Network Observability, click **Flow Collector**.
5. Click **Create FlowCollector** and configure the following parameters:

   - **spec.agent.ebpf.Sampling**: Adjust flow sampling. A lower value may increase resource usage.
   - **Loki Client Settings**: Disable if not using Loki.
   - **spec.loki.mode**: Set to **LokiStack** if using Loki, otherwise configure for manual settings.
   - **spec.loki.lokistack.name**: Set to the name of your LokiStack resource (e.g., **loki**).
   - **Optional**: Configure Kafka for data forwarding if required.

6. Click **Create** to deploy the **FlowCollector**.

### Verification

After deployment:
1. Navigate to **Observe → Network Traffic** to view the traffic data.
2. If there are no application traffic results, click **Clear all filters** to reset the view.

---

## Alternative: Deploy FlowCollector Using YAML

You can also create the **FlowCollector** using a YAML definition as follows:

```yaml
apiVersion: flows.netobserv.io/v1beta2
kind: FlowCollector
metadata:
  name: cluster
spec:
  namespace: netobserv
  deploymentModel: Direct
  agent:
    type: eBPF
    ebpf:
      sampling: 50
      logLevel: info
      privileged: false
      resources:
        requests:
          memory: 50Mi
          cpu: 100m
        limits:
          memory: 800Mi
  processor:
    logLevel: info
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 800Mi
    logTypes: Flows
    advanced:
      conversationEndTimeout: 10s
      conversationHeartbeatInterval: 30s
  loki:
    mode: LokiStack
  consolePlugin:
    register: true
    logLevel: info
    portNaming:
      enable: true
      portNames:
        "3100": loki
    quickFilters:
      - name: Applications
        filter:
          src_namespace!: 'openshift-,netobserv'
          dst_namespace!: 'openshift-,netobserv'
        default: true
      - name: Infrastructure
        filter:
          src_namespace: 'openshift-,netobserv'
          dst_namespace: 'openshift-,netobserv'
      - name: Pods network
        filter:
          src_kind: 'Pod'
          dst_kind: 'Pod'
        default: true
      - name: Services network
        filter:
          dst_kind: 'Service'
```

Apply this configuration using:

```bash
$ oc apply -f <filename>.yaml
```

---

## Checking Pods

After the FlowCollector is deployed, you can check the status of the Loki and FlowCollector pods:

```bash
$ oc get pods
```

---

## Viewing Traffic in OpenShift Console

To view network traffic:

1. Go to the **OpenShift Console**.
2. On the left-hand sidebar, navigate to **Observe → Network Traffic**.
3. The traffic data will be displayed, showing network flows across the cluster.

For detailed instructions on observing network traffic, refer to the [official documentation](https://docs.openshift.com/container-platform/4.16/observability/network_observability/observing-network-traffic.html).
